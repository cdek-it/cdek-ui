name: üöÄ Auto Create in Satellite

on:
  issues:
    types: [labeled]

jobs:
  auto-create-satellite-issue:
    runs-on: ubuntu-latest
    if: startsWith(github.event.label.name, 'satellite/')
    
    steps:
      - name: Checkout Hub
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install @octokit/rest

      - name: Auto create issue in satellite
        uses: actions/github-script@v7
        with:
          script: |
            const { issue, label } = context.payload;
            
            if (!label.name.startsWith('satellite/')) return;
            
            const satelliteName = label.name.replace('satellite/', '');
            console.log('üîÑ Auto-creating issue in satellite: ' + satelliteName);
            
            const hasRoutedLabel = issue.labels.some(l => l.name === 'status/routed');
            if (hasRoutedLabel) {
              console.log('‚ÑπÔ∏è Issue already routed to satellite, skipping');
              return;
            }
            
            await createSatelliteIssue(issue, satelliteName);
            
            async function createSatelliteIssue(hubIssue, satelliteName) {
              try {
                const repoMap = {
                  'yandex-test': 'yandex-test',
                  'ozon-test': 'ozon-test',
                  'wildberries-test': 'wildberries-test'
                };
                
                const targetRepo = repoMap[satelliteName];
                if (!targetRepo) {
                  console.log('‚ùå Unknown satellite: ' + satelliteName);
                  return;
                }
                
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π github –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤–º–µ—Å—Ç–æ octokit
                const satelliteIssue = await github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: targetRepo,
                  title: '[From Hub] ' + hubIssue.title,
                  body: '## üì° –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞ –∏–∑ Hub\n\n' +
                        '**Original Issue**: #' + hubIssue.number + '\n' +
                        '**Hub URL**: ' + hubIssue.html_url + '\n' +
                        '**Created By**: @' + hubIssue.user.login + '\n' +
                        '**Satellite**: ' + satelliteName + '\n' +
                        '**Auto-created**: ' + new Date().toISOString() + '\n\n' +
                        '---\n\n' +
                        hubIssue.body + '\n\n' +
                        '---\n\n' +
                        '### üîó –°–≤—è–∑—å —Å Hub\n' +
                        '- –í—Å–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ [Hub Issue #' + hubIssue.number + '](' + hubIssue.html_url + ')\n' +
                        '- –ö–æ–¥ –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤ —ç—Ç–æ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏\n' +
                        '- –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PR —Å—Å—ã–ª–∞–π—Ç–µ—Å—å –Ω–∞ —ç—Ç—É –∑–∞–¥–∞—á—É\n' +
                        '- –°—Ç–∞—Ç—É—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏',
                  labels: ['from-hub', 'needs-triage']
                });
                
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: hubIssue.number,
                  name: 'status/needs-routing'
                });
                
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: hubIssue.number,
                  labels: ['status/routed', 'auto-created']
                });
                
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: hubIssue.number,
                  body: '‚úÖ **–ó–∞–¥–∞—á–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–∞ –≤ satellite!**\n\n' +
                        '**Satellite**: `' + targetRepo + '`\n' +
                        '**Issue**: [#' + satelliteIssue.data.number + '](' + satelliteIssue.data.html_url + ')\n' +
                        '**Auto-created**: ' + new Date().toLocaleString() + '\n\n' +
                        '**–°—Ç–∞—Ç—É—Å**: üü¢ –ê–∫—Ç–∏–≤–Ω–æ –≤ satellite'
                });
                
                console.log('‚úÖ Created issue in ' + targetRepo + ': #' + satelliteIssue.data.number);
                
              } catch (error) {
                console.log('‚ùå Failed to create in ' + satelliteName + ': ' + error.message);
                
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: hubIssue.number,
                  body: '‚ùå **–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Å–æ–∑–¥–∞–Ω–∏—è –≤ satellite**\n\n' +
                        '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É –≤ satellite `' + satelliteName + '`:\n' +
                        '```\n' + error.message + '\n```'
                });
              }
            }
