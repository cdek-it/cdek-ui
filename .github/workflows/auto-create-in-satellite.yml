name: üöÄ Auto Create in Satellite

on:
  issues:
    types: [labeled]

jobs:
  auto-create-satellite-issue:
    runs-on: ubuntu-latest
    if: startsWith(github.event.label.name, 'satellite/')
    
    steps:
      - name: Checkout Hub
        uses: actions/checkout@v4

      - name: Auto create issue in satellite
        uses: actions/github-script@v7
        env:
          SYNC_TOKEN: ${{ secrets.ADD_TO_PROJECT_PAT }}
        with:
          script: |
            const { issue, label } = context.payload;
            
            if (!label.name.startsWith('satellite/')) return;
            
            const satelliteName = label.name.replace('satellite/', '');
            console.log('üîÑ Auto-creating issue in satellite: ' + satelliteName);
            
            const hasRoutedLabel = issue.labels.some(l => l.name === 'state/routed');
            if (hasRoutedLabel) {
              console.log('‚ÑπÔ∏è Issue already routed to satellite, skipping');
              return;
            }
            
            await createSatelliteIssue(issue, satelliteName);
            
            async function createSatelliteIssue(hubIssue, satelliteName) {
              try {
                const repoMap = {
                  'yandex-test': 'yandex-test',
                  'ozon': 'ozon-test',
                  'wildberries-test': 'wildberries-test',
                  'yandex': 'yandex',
                  'ozon': 'ozon',
                  'wildberries': 'wildberries',
                  'wordpress': 'wordpress',
                  'cdek-it.github.io': 'cdek-it.github.io',
                  'xstate-json-types': 'xstate-json-types',
                  'widget': 'widget',
                  'sdk2.0': 'sdk2.0',
                  'opencart': 'opencart',
                  'react-ui-kit': 'react-ui-kit',
                  'vue-ui-kit': 'vue-ui-kit',
                  'react-native-ui-kit': 'react-native-ui-kit',
                  'angular-ui-kit': 'angular-ui-kit'
                };
                
                const targetRepo = repoMap[satelliteName];
                if (!targetRepo) {
                  console.log('‚ùå Unknown satellite: ' + satelliteName);
                  return;
                }

                const labelsToSync = hubIssue.labels
                  .map(l => l.name)
                  .filter(labelName => 
                    !labelName.startsWith('satellite/') &&
                    labelName !== 'status/need-triage'
                  );
                
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º fetch –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è issue
                const response = await fetch(`https://api.github.com/repos/${context.repo.owner}/${targetRepo}/issues`, {
                  method: 'POST',
                  headers: {
                    'Authorization': `token ${process.env.SYNC_TOKEN}`,
                    'Content-Type': 'application/json',
                    'Accept': 'application/vnd.github.v3+json'
                  },
                  body: JSON.stringify({
                    title: '[From Hub] ' + hubIssue.title,
                    body: '## üì° –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞ –∏–∑ Hub\n\n' +
                          '**Original Issue**: #' + hubIssue.number + '\n' +
                          '**Hub URL**: ' + hubIssue.html_url + '\n' +
                          '**Created By**: @' + hubIssue.user.login + '\n' +
                          '**Satellite**: ' + satelliteName + '\n' +
                          '**Auto-created**: ' + new Date().toISOString() + '\n\n' +
                          '---\n\n' +
                          hubIssue.body + '\n\n' +
                          '---\n\n' +
                          '### üîó –°–≤—è–∑—å —Å Hub\n' +
                          '- –í—Å–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ [Hub Issue #' + hubIssue.number + '](' + hubIssue.html_url + ')\n' +
                          '- –ö–æ–¥ –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤ —ç—Ç–æ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏\n' +
                          '- –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PR —Å—Å—ã–ª–∞–π—Ç–µ—Å—å –Ω–∞ —ç—Ç—É –∑–∞–¥–∞—á—É\n' +
                          '- –°—Ç–∞—Ç—É—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏',
                    labels: ['state/from-hub', 'status/needs-triage', ...labelsToSync]
                  })
                });
                
                if (!response.ok) {
                  throw new Error(`HTTP error! status: ${response.status} - ${await response.text()}`);
                }
                
                const satelliteIssue = await response.json();
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ Hub issue –≤–º–µ—Å—Ç–æ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
                const updatedBody = hubIssue.body + '\n\n---\n\n' +
                  '## üì° Satellite Information\n\n' +
                  '‚úÖ **–ó–∞–¥–∞—á–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–∞ –≤ satellite!**\n\n' +
                  '**Satellite**: `' + targetRepo + '`\n' +
                  '**Satellite Issue**: [#' + satelliteIssue.number + '](' + satelliteIssue.html_url + ')\n' +
                  '**Auto-created**: ' + new Date().toLocaleString() + '\n' +
                  '**–°—Ç–∞—Ç—É—Å**: üü¢ –ê–∫—Ç–∏–≤–Ω–æ –≤ satellite';
                
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: hubIssue.number,
                  body: updatedBody
                });
                
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: hubIssue.number,
                  labels: ['state/routed']
                });
                
                console.log('‚úÖ Created issue in ' + targetRepo + ': #' + satelliteIssue.number);
                
              } catch (error) {
                console.log('‚ùå Failed to create in ' + satelliteName + ': ' + error.message);
                
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: hubIssue.number,
                  body: '‚ùå **–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Å–æ–∑–¥–∞–Ω–∏—è –≤ satellite**\n\n' +
                        '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É –≤ satellite `' + satelliteName + '`:\n' +
                        '```\n' + error.message + '\n```'
                });
              }
            }
