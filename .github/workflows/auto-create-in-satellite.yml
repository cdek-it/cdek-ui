name: üöÄ Auto Create in Satellite

on:
  issues:
    types: [labeled]

jobs:
  auto-create-satellite-issue:
    runs-on: ubuntu-latest
    if: startsWith(github.event.label.name, 'satellite/')
    
    steps:
      - name: Checkout Hub
        uses: actions/checkout@v4

      - name: Auto create issue in satellite
        uses: actions/github-script@v7
        with:
          script: |
            const { issue, label } = context.payload;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ satellite –º–µ—Ç–∫–∞
            if (!label.name.startsWith('satellite/')) return;
            
            const satelliteName = label.name.replace('satellite/', '');
            
            console.log(`üîÑ Auto-creating issue in satellite: ${satelliteName}`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–¥–∞—á–∞ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ –≤ satellite
            const hasRoutedLabel = issue.labels.some(l => l.name === 'status/routed');
            if (hasRoutedLabel) {
              console.log('‚ÑπÔ∏è Issue already routed to satellite, skipping');
              return;
            }
            
            await createSatelliteIssue(issue, satelliteName);
            
            async function createSatelliteIssue(hubIssue, satelliteName) {
              try {
                // –ú–∞–ø–ø–∏–Ω–≥ satellites –Ω–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
                const repoMap = {
                  'yandex-test': 'yandex-test',
                  'ozon-test': 'ozon-test',
                  'wildberries-test': 'wildberries-test'
                };
                
                const targetRepo = repoMap[satelliteName];
                
                if (!targetRepo) {
                  console.log(`‚ùå Unknown satellite: ${satelliteName}`);
                  return;
                }
                
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º PAT –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ satellite
                const { Octokit } = require('@octokit/rest');
                const octokit = new Octokit({
                  auth: '${{ secrets.SYNC_ACCESS_TOKEN }}'
                });
                
                // –°–æ–∑–¥–∞–µ–º issue –≤ satellite
                const satelliteIssue = await octokit.rest.issues.create({
                  owner: context.repo.owner,
                  repo: targetRepo,
                  title: `[From Hub] ${hubIssue.title}`,
                  body: `## üì° –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞ –∏–∑ Hub
                  
                **Original Issue**: #${hubIssue.number}
                **Hub URL**: ${hubIssue.html_url}
                **Created By**: @${hubIssue.user.login}
                **Satellite**: ${satelliteName}
                **Auto-created**: ${new Date().toISOString()}

                ---
                
                ${hubIssue.body}
                
                ---
                
                # ### üîó –°–≤—è–∑—å —Å Hub
                # - –í—Å–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ [Hub Issue #${hubIssue.number}](${hubIssue.html_url})
                # - –ö–æ–¥ –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤ —ç—Ç–æ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
                # - –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PR —Å—Å—ã–ª–∞–π—Ç–µ—Å—å –Ω–∞ —ç—Ç—É –∑–∞–¥–∞—á—É
                # - –°—Ç–∞—Ç—É—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
                #   `,
                #   labels: ['from-hub', 'needs-triage']
                # });
                
                # // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∫–∏ –≤ Hub
                # await github.rest.issues.removeLabel({
                #   owner: context.repo.owner,
                #   repo: context.repo.repo,
                #   issue_number: hubIssue.number,
                #   name: 'status/needs-routing'
                # });
                
                # await github.rest.issues.addLabels({
                #   owner: context.repo.owner,
                #   repo: context.repo.repo,
                #   issue_number: hubIssue.number,
                #   labels: ['status/routed', 'auto-created']
                # });
                
                // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å —Å—Å—ã–ª–∫–æ–π
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: hubIssue.number,
                  body: `‚úÖ **–ó–∞–¥–∞—á–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–∞ –≤ satellite!**
                  
                **Satellite**: \`${targetRepo}\`
                **Issue**: [#${satelliteIssue.data.number}](${satelliteIssue.data.html_url})
                **Auto-created**: ${new Date().toLocaleString()}
                
                **–°—Ç–∞—Ç—É—Å**: üü¢ –ê–∫—Ç–∏–≤–Ω–æ –≤ satellite`
                                });
                
                console.log(`‚úÖ Created issue in ${targetRepo}: #${satelliteIssue.data.number}`);
                
              } catch (error) {
                console.log(`‚ùå Failed to create in ${satelliteName}: ${error.message}`);
                
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: hubIssue.number,
                  body: `‚ùå **–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Å–æ–∑–¥–∞–Ω–∏—è –≤ satellite**
                  
              –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É –≤ satellite \`${satelliteName}\`:
              \`\`\`
              ${error.message}
              \`\`\``
                });
              }
            }
