name: Auto-assign by label

on:
  issues:
    types: [opened, labeled]
  pull_request:
    types: [opened, labeled]

permissions:
  issues: write
  pull-requests: write

jobs:
  assign:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Auto-assign team based on labels-config.json
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require("fs");
            const path = require("path");

            // –ø—É—Ç—å –∫ JSON
            const labelsPath = path.join(process.env.GITHUB_WORKSPACE, ".github", "labels-config.json");

            if (!fs.existsSync(labelsPath)) {
              console.log("‚ùå –§–∞–π–ª labels-config.json –Ω–µ –Ω–∞–π–¥–µ–Ω!");
              return;
            }

            // —á–∏—Ç–∞–µ–º –∫–æ–Ω—Ñ–∏–≥
            const configData = JSON.parse(fs.readFileSync(labelsPath, "utf8"));

            // —Å—Ç—Ä–æ–∏–º –º–∞–ø–ø–∏–Ω–≥: –ª–µ–π–±–ª ‚Üí –∫–æ–º–∞–Ω–¥–∞
            const labelToTeam = {};
            for (const category of Object.values(configData)) {
              for (const label of category) {
                if (label.team) {
                  labelToTeam[label.name] = label.team;
                }
              }
            }

            const org = context.repo.owner;
            const item = context.payload.issue || context.payload.pull_request;

            if (!item) {
              console.log("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω issue –∏–ª–∏ PR.");
              return;
            }

            const number = item.number;
            const labels = item.labels.map(l => l.name);

            console.log("üè∑Ô∏è –õ–µ–π–±–ª—ã:", labels);

            for (const label of labels) {
              const team = labelToTeam[label];
              if (!team) continue;

              const assignee = `@${org}/${team}`;
              console.log(`‚úÖ –ù–∞–∑–Ω–∞—á–∞–µ–º ${assignee} –¥–ª—è –ª–µ–π–±–ª–∞ ${label}`);

              try {
                await github.rest.issues.addAssignees({
                  owner: org,
                  repo: context.repo.repo,
                  issue_number: number,
                  assignees: [assignee]
                });
              } catch (error) {
                console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∑–Ω–∞—á–∏—Ç—å ${assignee}: ${error.message}`);
              }
            }
