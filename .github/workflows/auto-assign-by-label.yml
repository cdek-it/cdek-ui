name: Auto-assign by label

on:
  issues:
    types: [opened, labeled]
  pull_request:
    types: [opened, labeled, reopened, synchronize]

jobs:
  assign-by-label:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Assign issue or PR based on label
        uses: actions/github-script@v7
        with:
          # –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏–±–æ GITHUB_TOKEN, –ª–∏–±–æ —Å–≤–æ–π PAT
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require("fs");
            const path = require("path");

            // –ó–∞–≥—Ä—É–∂–∞–µ–º labels-config.json
            const labelsPath = path.join(process.env.GITHUB_WORKSPACE, ".github", "labels-config.json");
            const configData = JSON.parse(fs.readFileSync(labelsPath, "utf8"));

            // –ú–∞–ø–ø–∏–Ω–≥ –º–µ—Ç–∫–∞ ‚Üí –∫–æ–º–∞–Ω–¥–∞ (slug)
            const labelToTeam = {
              "area/design-system": "design-team",
              "area/components": "frontend-specialists",
              "area/accessibility": "a11y-experts",
              "area/performance": "performance-team",
              "area/tooling": "devops-team",
              "area/i18n": "i18n-team",
              "area/mobile": "mobile-team"
            };

            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –≤—ã–∑–≤–∞–ª–æ Action ‚Äî Issue –∏–ª–∏ PR
            const isIssue = !!context.payload.issue;
            const item = isIssue ? context.payload.issue : context.payload.pull_request;
            const number = item.number;
            const labels = item.labels.map(l => l.name);
            const org = context.repo.owner;

            console.log(`üü¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ ${isIssue ? "Issue" : "Pull Request"} #${number}`);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∏–µ –º–µ—Ç–∫–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç
            const validLabels = Object.values(configData).flat().map(l => l.name);
            const matchingLabels = labels.filter(label => validLabels.includes(label));

            if (matchingLabels.length === 0) {
              console.log("‚ùå –ù–µ—Ç –º–µ—Ç–æ–∫, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ñ–∏–≥—É.");
              return;
            }

            for (const label of matchingLabels) {
              const teamSlug = labelToTeam[label];
              if (!teamSlug) {
                console.log(`‚ö†Ô∏è –î–ª—è –º–µ—Ç–∫–∏ '${label}' –Ω–µ—Ç –∫–æ–º–∞–Ω–¥—ã`);
                continue;
              }

              console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: ${teamSlug} –¥–ª—è –º–µ—Ç–∫–∏ ${label}`);

              // –ü–æ–ª—É—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥—ã
              const members = await github.paginate(
                github.teams.listMembersInOrg,
                { org, team_slug: teamSlug }
              );

              const assignees = members.map(m => m.login);
              if (assignees.length === 0) {
                console.log(`‚ö†Ô∏è –í –∫–æ–º–∞–Ω–¥–µ ${teamSlug} –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.`);
                continue;
              }

              // –ù–∞–∑–Ω–∞—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
              const params = {
                owner: org,
                repo: context.repo.repo,
                issue_number: number,
                assignees
              };

              await github.issues.addAssignees(params);
              console.log(`üéØ –ù–∞–∑–Ω–∞—á–µ–Ω–æ –Ω–∞: ${assignees.join(", ")}`);
            }
